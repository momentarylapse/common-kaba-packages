

func optimize(x: float[], f: float[]->float) -> float[]
	var f_best = f(x)
	var x_best = x
	
	for step in 0:1000
		var dx = 0.01
		for i in 0:len(x)
			var xx = x_best
			xx[i] += dx
			var cur = f(xx)
			if cur < f_best
				x_best = xx
				f_best = cur
			else
				xx[i] -= 2 * dx
				cur = f(xx)
				if cur < f_best
					x_best = xx
					f_best = cur
			
	return x_best


func main()
	var ff_test = func (p: float[])  sum_sqr([for x in -5.0:5.0:0.2 p[0] * exp(-x*x * p[1]) - 3 * exp(-x*x * 0.7)])
	print(optimize([1.0,1.0], ff_test))
	
