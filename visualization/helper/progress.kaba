use hui

var main_win: hui.Window*

class Progress
	dlg: shared[hui.Dialog]
	
	func __init__(title: string)
		dlg = new hui.Dialog(title, 300, 50, main_win, false)
		#set_options("", "")
		for d in dlg
			d.add_progress_bar("", 0, 0, "progress")
		hui.fly(dlg)
		hui.do_single_main_loop()
	
	func __delete__()
		for d in dlg
			d.destroy()
		hui.do_single_main_loop()
	
	func mut set(f: float)
		for d in dlg
			d.set_float("progress", f)
		hui.do_single_main_loop()
	
	func mut set(t: string)
		for d in dlg
			d.set_title(t)
		hui.do_single_main_loop()

var progress: owned[Progress]

func start(title: string)
	progress = new Progress(title)

func set(f: float)
	for p in progress
		p.set(f)

func set(t: string)
	for p in progress
		p.set(t)

func end()
	del progress

class TextProgress
	var first = true
	var finished = false
	let width = 64

	func __delete__()
		done()

	func mut show(f: float)
		if not first
			print("\x08".repeat(width + 2))
		first = false
		let n_done = int(f * width)
		_print_postfix = ""
		print("[" + "#".repeat(n_done) + " ".repeat(width - n_done) + "]")

	func mut done()
		if finished
			return
		show(1.0)
		_print_postfix = "\n"
		print("")
		finished = true

