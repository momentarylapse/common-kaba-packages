const KABA_LINK = "/usr/lib64/libz.so
	_deflate:deflate
	_compressBound:compressBound
	_compress:compress
	_uncompress:uncompress
"

func extern _compressBound(l: int) -> int64
func extern _deflate() -> int
func extern _compress(dest: void*, dest_len: int64*, source: void*, source_len: int) -> int
func extern _uncompress(dest: void*, dest_len: int64*, source: void*, source_len: int) -> int

func compress(s: string) -> string
	int64 ll = _compressBound(len(s)) + 1024
	string o
	o.resize(ll)
	int r = _compress(&o[0], &ll, &s[0], len(s))
	o.resize(ll)
	return o

func uncompress(s: string, len_max: int) -> string
	int64 ll = len_max + 1024
	string o
	o.resize(ll)
	int r = _uncompress(&o[0], &ll, &s[0], len(s))
	o.resize(ll)
	return o

func __main()
	string a = "hallo Welt, ein kleiner Test bla bla bla
	hallo Welt, ein kleiner Test bla bla bla
	hallo Welt, ein kleiner Test bla bla bla
	hallo Welt, ein kleiner Test bla bla bla
	hallo Welt, ein kleiner Test bla bla bla
	hallo Welt, ein kleiner Test bla bla bla
	hallo Welt, ein kleiner Test bla bla bla
	hallo Welt, ein kleiner Test bla bla bla
	hallo Welt, ein kleiner Test bla bla bla"
	print(len(a))
	
	var oo = compress(a)
	print(len(oo))
	print(oo.hex())
	
	print(uncompress(oo, 65536))
