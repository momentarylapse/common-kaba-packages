use project.*
use os
use os.Path

func suggest_install_prefix() -> Path
	if conf.home_directory.is_empty()
		raise(new Exception("failed to find suitable install prefix..."))
	return conf.home_directory | ".local"


func build()
	if conf.force_rebuild
		build_clear()
	
	let dir = "build" as Path
	if not os.fs.exists(dir)
		os.fs.create_directory(dir)
		if conf.install_prefix.is_empty()
			raise(new Exception("failed to find suitable install prefix... use --prefix DIR instead"))
		let r = os.shell_execute("cd {{dir}};cmake .. -GNinja -DCMAKE_INSTALL_PREFIX='{{conf.install_prefix}}';cd ..", true)

	os.shell_execute("cd {{dir}};ninja;cd ..", true)



func build_clear()
	let dir = "build" as Path
	if os.fs.exists(dir)
		let r = os.shell_execute("cd {{dir}};ninja clean;cd ..", true)


func install()
	let dir = "build" as Path
	os.shell_execute("cd {{dir}};ninja install;cd ..", true)
	
	
