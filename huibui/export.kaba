use os
use os.Path
use hui
use config.*
use resource.*
use language.*

func write_resource(out f: os.FileStream, r: hui.Resource)
	f << r.type
	if r.id.head(1) == "/"
		f << r.id[1:]
	else
		f << r.id
	f << r.options.join(",")
	f << r.x
	f << r.y
	f << len(r.children)
	for c in r.children
		write_resource(f, c)


func write_language(out f: os.FileStream, l: Language)
	var ids = l.get_useful_ids()
	var texts = l.get_useful_texts()

	f << "# Language"
	f << l.name
	f << "# Number Of IDs"
	f << len(ids)
	f << "# Text"
	for i in ids
		f << i.id
		f << i.title.escape()
		f << i.tooltip.escape()
	f << "# Num Language Strings"
	f << len(texts)
	f << "# Text"
	for t in texts
		f << t.orig.escape()
		f << t.trans.escape()

func export_resources(res: hui.Resource[], own: Language, langs: Language[])
	var f = os.fs.open(conf.export_dir | "hui_resources.txt", "wt")
	f << "t7"
	f << "# Number Of Resources"
	f << len(res)
	for r in res
		f << "# Resource"
		write_resource(f, r)
	f << "# Number Of Languages"
	f << (len(langs) + 1)
	write_language(f, own)
	for l in langs
		write_language(f, l)

